{
  "version": 3,
  "sources": ["../bundle-NAJ01U/checked-fetch.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/utils/color.js", "../../../node_modules/hono/dist/middleware/logger/index.js", "../../../node_modules/hono/dist/middleware/pretty-json/index.js", "../../../src/worker/routes/auth.ts", "../../../src/worker/routes/projects.ts", "../../../src/worker/routes/collaboration.ts", "../../../src/worker/routes/ai.ts", "../../../src/worker/routes/deployments.ts", "../../../src/worker/routes/analytics.ts", "../../../src/worker/durable-objects/collaboration-room.ts", "../../../src/worker/index.ts", "../../../../../../../../../.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-NAJ01U/middleware-insertion-facade.js", "../../../../../../../../../.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-NAJ01U/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/.wrangler/tmp/dev-swgSnT",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/utils/color.ts\nfunction getColorEnabled() {\n  const { process, Deno } = globalThis;\n  const isNoColor = typeof Deno?.noColor === \"boolean\" ? Deno.noColor : process !== void 0 ? \"NO_COLOR\" in process?.env : false;\n  return !isNoColor;\n}\nasync function getColorEnabledAsync() {\n  const { navigator } = globalThis;\n  const cfWorkers = \"cloudflare:workers\";\n  const isNoColor = navigator !== void 0 && navigator.userAgent === \"Cloudflare-Workers\" ? await (async () => {\n    try {\n      return \"NO_COLOR\" in ((await import(cfWorkers)).env ?? {});\n    } catch {\n      return false;\n    }\n  })() : !getColorEnabled();\n  return !isNoColor;\n}\nexport {\n  getColorEnabled,\n  getColorEnabledAsync\n};\n", "// src/middleware/logger/index.ts\nimport { getColorEnabledAsync } from \"../../utils/color.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = async (status) => {\n  const colorEnabled = await getColorEnabledAsync();\n  if (colorEnabled) {\n    switch (status / 100 | 0) {\n      case 5:\n        return `\\x1B[31m${status}\\x1B[0m`;\n      case 4:\n        return `\\x1B[33m${status}\\x1B[0m`;\n      case 3:\n        return `\\x1B[36m${status}\\x1B[0m`;\n      case 2:\n        return `\\x1B[32m${status}\\x1B[0m`;\n    }\n  }\n  return `${status}`;\n};\nasync function log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method, url } = c.req;\n    const path = url.slice(url.indexOf(\"/\", 8));\n    await log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    await log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n", "// src/middleware/pretty-json/index.ts\nvar prettyJSON = (options) => {\n  const targetQuery = options?.query ?? \"pretty\";\n  return async function prettyJSON2(c, next) {\n    const pretty = c.req.query(targetQuery) || c.req.query(targetQuery) === \"\";\n    await next();\n    if (pretty && c.res.headers.get(\"Content-Type\")?.startsWith(\"application/json\")) {\n      const obj = await c.res.json();\n      c.res = new Response(JSON.stringify(obj, null, options?.space ?? 2), c.res);\n    }\n  };\n};\nexport {\n  prettyJSON\n};\n", "import { Hono } from 'hono';\nimport { User } from '@/types';\n\nconst app = new Hono();\n\n// Mock user data - in production, use proper authentication\nconst mockUsers: User[] = [\n  {\n    id: '1',\n    name: 'Demo User',\n    email: 'demo@codecollab.live',\n    color: '#3b82f6',\n    isOnline: true,\n    lastSeen: new Date(),\n  },\n  {\n    id: '2',\n    name: 'Alice Developer',\n    email: 'alice@codecollab.live',\n    color: '#ef4444',\n    isOnline: true,\n    lastSeen: new Date(),\n  },\n  {\n    id: '3',\n    name: 'Bob Coder',\n    email: 'bob@codecollab.live',\n    color: '#10b981',\n    isOnline: false,\n    lastSeen: new Date(Date.now() - 3600000), // 1 hour ago\n  },\n];\n\n// Login\napp.post('/login', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { email, password } = body;\n\n    // Mock authentication - in production, verify credentials\n    const user = mockUsers.find(u => u.email === email);\n    \n    if (!user) {\n      return c.json({ error: 'Invalid credentials' }, 401);\n    }\n\n    // Generate session token\n    const token = crypto.randomUUID();\n    \n    // Store in KV for session management\n    await c.env.CACHE.put(`session:${token}`, JSON.stringify(user), {\n      expirationTtl: 86400, // 24 hours\n    });\n\n    return c.json({\n      success: true,\n      data: {\n        user,\n        token,\n      },\n    });\n  } catch (error) {\n    console.error('Error during login:', error);\n    return c.json({ error: 'Authentication failed' }, 500);\n  }\n});\n\n// Register\napp.post('/register', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { name, email, password } = body;\n\n    if (!name || !email || !password) {\n      return c.json({ error: 'All fields are required' }, 400);\n    }\n\n    // Check if user already exists\n    const existingUser = mockUsers.find(u => u.email === email);\n    if (existingUser) {\n      return c.json({ error: 'User already exists' }, 409);\n    }\n\n    // Create new user\n    const newUser: User = {\n      id: crypto.randomUUID(),\n      name,\n      email,\n      color: `#${Math.floor(Math.random()*16777215).toString(16)}`, // Random color\n      isOnline: true,\n      lastSeen: new Date(),\n    };\n\n    mockUsers.push(newUser);\n\n    // Generate session token\n    const token = crypto.randomUUID();\n    \n    await c.env.CACHE.put(`session:${token}`, JSON.stringify(newUser), {\n      expirationTtl: 86400,\n    });\n\n    return c.json({\n      success: true,\n      data: {\n        user: newUser,\n        token,\n      },\n    }, 201);\n  } catch (error) {\n    console.error('Error during registration:', error);\n    return c.json({ error: 'Registration failed' }, 500);\n  }\n});\n\n// Get current user\napp.get('/me', async (c) => {\n  try {\n    const token = c.req.header('Authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n      return c.json({ error: 'No token provided' }, 401);\n    }\n\n    const userData = await c.env.CACHE.get(`session:${token}`);\n    \n    if (!userData) {\n      return c.json({ error: 'Invalid token' }, 401);\n    }\n\n    const user: User = JSON.parse(userData);\n    \n    return c.json({\n      success: true,\n      data: user,\n    });\n  } catch (error) {\n    console.error('Error getting user:', error);\n    return c.json({ error: 'Failed to get user' }, 500);\n  }\n});\n\n// Logout\napp.post('/logout', async (c) => {\n  try {\n    const token = c.req.header('Authorization')?.replace('Bearer ', '');\n    \n    if (token) {\n      await c.env.CACHE.delete(`session:${token}`);\n    }\n\n    return c.json({\n      success: true,\n      message: 'Logged out successfully',\n    });\n  } catch (error) {\n    console.error('Error during logout:', error);\n    return c.json({ error: 'Logout failed' }, 500);\n  }\n});\n\n// Update user profile\napp.put('/profile', async (c) => {\n  try {\n    const token = c.req.header('Authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n      return c.json({ error: 'No token provided' }, 401);\n    }\n\n    const userData = await c.env.CACHE.get(`session:${token}`);\n    \n    if (!userData) {\n      return c.json({ error: 'Invalid token' }, 401);\n    }\n\n    const user: User = JSON.parse(userData);\n    const body = await c.req.json();\n    const { name, color } = body;\n\n    // Update user\n    const updatedUser: User = {\n      ...user,\n      name: name || user.name,\n      color: color || user.color,\n    };\n\n    // Update in mock data\n    const userIndex = mockUsers.findIndex(u => u.id === user.id);\n    if (userIndex !== -1) {\n      mockUsers[userIndex] = updatedUser;\n    }\n\n    // Update session\n    await c.env.CACHE.put(`session:${token}`, JSON.stringify(updatedUser), {\n      expirationTtl: 86400,\n    });\n\n    return c.json({\n      success: true,\n      data: updatedUser,\n    });\n  } catch (error) {\n    console.error('Error updating profile:', error);\n    return c.json({ error: 'Failed to update profile' }, 500);\n  }\n});\n\n// Get all users (for collaboration)\napp.get('/users', async (c) => {\n  try {\n    return c.json({\n      success: true,\n      data: mockUsers,\n    });\n  } catch (error) {\n    console.error('Error getting users:', error);\n    return c.json({ error: 'Failed to get users' }, 500);\n  }\n});\n\nexport const authRoutes = app;\nexport default app; ", "import { Hono } from 'hono';\nimport { Project, FileStructure } from '@/types';\n\nconst app = new Hono();\n\n// Get all projects for user\napp.get('/', async (c) => {\n  try {\n    const userId = c.req.header('X-User-ID');\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const { results } = await c.env.DB.prepare(`\n      SELECT * FROM projects \n      WHERE owner_id = ? OR id IN (\n        SELECT project_id FROM project_collaborators WHERE user_id = ?\n      )\n      ORDER BY updated_at DESC\n    `).bind(userId, userId).all();\n\n    return c.json({\n      success: true,\n      data: results,\n    });\n  } catch (error) {\n    console.error('Error fetching projects:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get single project\napp.get('/:id', async (c) => {\n  try {\n    const projectId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    // Check permissions\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    // Get project files\n    const { results: files } = await c.env.DB.prepare(`\n      SELECT * FROM project_files WHERE project_id = ? ORDER BY path\n    `).bind(projectId).all();\n\n    return c.json({\n      success: true,\n      data: {\n        ...project,\n        files: files,\n      },\n    });\n  } catch (error) {\n    console.error('Error fetching project:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Create new project\napp.post('/', async (c) => {\n  try {\n    const userId = c.req.header('X-User-ID');\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const body = await c.req.json();\n    const { name, description, isPublic = false } = body;\n\n    if (!name) {\n      return c.json({ error: 'Project name is required' }, 400);\n    }\n\n    const projectId = crypto.randomUUID();\n    const now = new Date().toISOString();\n\n    // Create project\n    await c.env.DB.prepare(`\n      INSERT INTO projects (id, name, description, owner_id, is_public, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?)\n    `).bind(projectId, name, description, userId, isPublic, now, now).run();\n\n    // Create default files\n    const defaultFiles = [\n      {\n        id: crypto.randomUUID(),\n        name: 'index.html',\n        path: '/index.html',\n        content: `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>${name}</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <div id=\"app\">\n        <h1>Welcome to ${name}!</h1>\n        <p>Start coding with your team in real-time.</p>\n    </div>\n    <script src=\"script.js\"></script>\n</body>\n</html>`,\n        language: 'html',\n      },\n      {\n        id: crypto.randomUUID(),\n        name: 'style.css',\n        path: '/style.css',\n        content: `body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    margin: 0;\n    padding: 20px;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#app {\n    background: white;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n    text-align: center;\n}\n\nh1 {\n    color: #333;\n    margin-bottom: 10px;\n}\n\np {\n    color: #666;\n    margin: 0;\n}`,\n        language: 'css',\n      },\n      {\n        id: crypto.randomUUID(),\n        name: 'script.js',\n        path: '/script.js',\n        content: `// Your JavaScript code here\nconsole.log('Hello from ${name}!');\n\n// Add your interactive features here\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('App loaded successfully!');\n});`,\n        language: 'javascript',\n      },\n    ];\n\n    for (const file of defaultFiles) {\n      await c.env.DB.prepare(`\n        INSERT INTO project_files (id, project_id, name, path, content, language, created_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?)\n      `).bind(file.id, projectId, file.name, file.path, file.content, file.language, now).run();\n    }\n\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    return c.json({\n      success: true,\n      data: {\n        ...project,\n        files: defaultFiles,\n      },\n    }, 201);\n  } catch (error) {\n    console.error('Error creating project:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Update project\napp.put('/:id', async (c) => {\n  try {\n    const projectId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n    const body = await c.req.json();\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check ownership\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ? AND owner_id = ?\n    `).bind(projectId, userId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found or access denied' }, 404);\n    }\n\n    const { name, description, isPublic } = body;\n    const now = new Date().toISOString();\n\n    await c.env.DB.prepare(`\n      UPDATE projects \n      SET name = ?, description = ?, is_public = ?, updated_at = ?\n      WHERE id = ?\n    `).bind(name, description, isPublic, now, projectId).run();\n\n    const updatedProject = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    return c.json({\n      success: true,\n      data: updatedProject,\n    });\n  } catch (error) {\n    console.error('Error updating project:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Delete project\napp.delete('/:id', async (c) => {\n  try {\n    const projectId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check ownership\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ? AND owner_id = ?\n    `).bind(projectId, userId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found or access denied' }, 404);\n    }\n\n    // Delete project files\n    await c.env.DB.prepare(`\n      DELETE FROM project_files WHERE project_id = ?\n    `).bind(projectId).run();\n\n    // Delete collaborators\n    await c.env.DB.prepare(`\n      DELETE FROM project_collaborators WHERE project_id = ?\n    `).bind(projectId).run();\n\n    // Delete project\n    await c.env.DB.prepare(`\n      DELETE FROM projects WHERE id = ?\n    `).bind(projectId).run();\n\n    return c.json({\n      success: true,\n      message: 'Project deleted successfully',\n    });\n  } catch (error) {\n    console.error('Error deleting project:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get project file\napp.get('/:id/files/:fileId', async (c) => {\n  try {\n    const projectId = c.req.param('id');\n    const fileId = c.req.param('fileId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    const file = await c.env.DB.prepare(`\n      SELECT * FROM project_files WHERE id = ? AND project_id = ?\n    `).bind(fileId, projectId).first();\n\n    if (!file) {\n      return c.json({ error: 'File not found' }, 404);\n    }\n\n    return c.json({\n      success: true,\n      data: file,\n    });\n  } catch (error) {\n    console.error('Error fetching file:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Update project file\napp.put('/:id/files/:fileId', async (c) => {\n  try {\n    const projectId = c.req.param('id');\n    const fileId = c.req.param('fileId');\n    const userId = c.req.header('X-User-ID');\n    const body = await c.req.json();\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    const { content } = body;\n    const now = new Date().toISOString();\n\n    await c.env.DB.prepare(`\n      UPDATE project_files \n      SET content = ?, updated_at = ?\n      WHERE id = ? AND project_id = ?\n    `).bind(content, now, fileId, projectId).run();\n\n    // Update project timestamp\n    await c.env.DB.prepare(`\n      UPDATE projects SET updated_at = ? WHERE id = ?\n    `).bind(now, projectId).run();\n\n    const file = await c.env.DB.prepare(`\n      SELECT * FROM project_files WHERE id = ? AND project_id = ?\n    `).bind(fileId, projectId).first();\n\n    return c.json({\n      success: true,\n      data: file,\n    });\n  } catch (error) {\n    console.error('Error updating file:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\nexport const projectRoutes = app;\nexport default app; ", "import { Hono } from 'hono';\n\nconst app = new Hono();\n\n// Get collaboration room state\napp.get('/room/:roomId', async (c) => {\n  try {\n    const roomId = c.req.param('roomId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Get Durable Object\n    const id = c.env.COLLABORATION.idFromName(roomId);\n    const obj = c.env.COLLABORATION.get(id);\n\n    const response = await obj.fetch('http://localhost/state');\n    \n    if (!response.ok) {\n      return c.json({ error: 'Failed to get room state' }, 500);\n    }\n\n    const state = await response.json();\n\n    return c.json({\n      success: true,\n      data: state,\n    });\n  } catch (error) {\n    console.error('Error getting room state:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get room participants\napp.get('/room/:roomId/participants', async (c) => {\n  try {\n    const roomId = c.req.param('roomId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Get Durable Object\n    const id = c.env.COLLABORATION.idFromName(roomId);\n    const obj = c.env.COLLABORATION.get(id);\n\n    const response = await obj.fetch('http://localhost/participants');\n    \n    if (!response.ok) {\n      return c.json({ error: 'Failed to get participants' }, 500);\n    }\n\n    const participants = await response.json();\n\n    return c.json({\n      success: true,\n      data: participants,\n    });\n  } catch (error) {\n    console.error('Error getting participants:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Invite user to project\napp.post('/invite', async (c) => {\n  try {\n    const userId = c.req.header('X-User-ID');\n    const body = await c.req.json();\n    const { projectId, inviteeEmail, permissions = 'read' } = body;\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project ownership\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ? AND owner_id = ?\n    `).bind(projectId, userId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found or access denied' }, 404);\n    }\n\n    // Get invitee user\n    const invitee = await c.env.DB.prepare(`\n      SELECT * FROM users WHERE email = ?\n    `).bind(inviteeEmail).first();\n\n    if (!invitee) {\n      return c.json({ error: 'User not found' }, 404);\n    }\n\n    // Check if already collaborator\n    const existingCollaborator = await c.env.DB.prepare(`\n      SELECT * FROM project_collaborators \n      WHERE project_id = ? AND user_id = ?\n    `).bind(projectId, invitee.id).first();\n\n    if (existingCollaborator) {\n      return c.json({ error: 'User is already a collaborator' }, 409);\n    }\n\n    // Add collaborator\n    await c.env.DB.prepare(`\n      INSERT INTO project_collaborators (project_id, user_id, permissions, created_at)\n      VALUES (?, ?, ?, ?)\n    `).bind(projectId, invitee.id, permissions, new Date().toISOString()).run();\n\n    return c.json({\n      success: true,\n      message: 'User invited successfully',\n      data: {\n        projectId,\n        inviteeId: invitee.id,\n        permissions,\n      },\n    });\n  } catch (error) {\n    console.error('Error inviting user:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Remove collaborator\napp.delete('/collaborator/:projectId/:userId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const collaboratorId = c.req.param('userId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project ownership\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ? AND owner_id = ?\n    `).bind(projectId, userId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found or access denied' }, 404);\n    }\n\n    // Remove collaborator\n    await c.env.DB.prepare(`\n      DELETE FROM project_collaborators \n      WHERE project_id = ? AND user_id = ?\n    `).bind(projectId, collaboratorId).run();\n\n    return c.json({\n      success: true,\n      message: 'Collaborator removed successfully',\n    });\n  } catch (error) {\n    console.error('Error removing collaborator:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get project collaborators\napp.get('/project/:projectId/collaborators', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    // Get collaborators\n    const { results: collaborators } = await c.env.DB.prepare(`\n      SELECT pc.*, u.name, u.email, u.avatar\n      FROM project_collaborators pc\n      JOIN users u ON pc.user_id = u.id\n      WHERE pc.project_id = ?\n      ORDER BY pc.created_at ASC\n    `).bind(projectId).all();\n\n    return c.json({\n      success: true,\n      data: collaborators,\n    });\n  } catch (error) {\n    console.error('Error getting collaborators:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Update collaborator permissions\napp.put('/collaborator/:projectId/:userId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const collaboratorId = c.req.param('userId');\n    const userId = c.req.header('X-User-ID');\n    const body = await c.req.json();\n    const { permissions } = body;\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project ownership\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ? AND owner_id = ?\n    `).bind(projectId, userId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found or access denied' }, 404);\n    }\n\n    // Update permissions\n    await c.env.DB.prepare(`\n      UPDATE project_collaborators \n      SET permissions = ?, updated_at = ?\n      WHERE project_id = ? AND user_id = ?\n    `).bind(permissions, new Date().toISOString(), projectId, collaboratorId).run();\n\n    return c.json({\n      success: true,\n      message: 'Permissions updated successfully',\n    });\n  } catch (error) {\n    console.error('Error updating permissions:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get collaboration analytics\napp.get('/analytics/:projectId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    // Get collaboration metrics\n    const { results: collaborators } = await c.env.DB.prepare(`\n      SELECT COUNT(*) as total_collaborators\n      FROM project_collaborators \n      WHERE project_id = ?\n    `).bind(projectId).all();\n\n    const { results: fileUpdates } = await c.env.DB.prepare(`\n      SELECT COUNT(*) as total_updates\n      FROM project_files \n      WHERE project_id = ? AND updated_at > datetime('now', '-7 days')\n    `).bind(projectId).all();\n\n    const analytics = {\n      projectId,\n      totalCollaborators: collaborators[0]?.total_collaborators || 0,\n      recentUpdates: fileUpdates[0]?.total_updates || 0,\n      lastActivity: project.updated_at,\n      createdAt: project.created_at,\n    };\n\n    return c.json({\n      success: true,\n      data: analytics,\n    });\n  } catch (error) {\n    console.error('Error getting analytics:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\nexport const collaborationRoutes = app;\nexport default app; ", "import { Hono } from 'hono';\nimport { AICompletion, AIError, AIChatMessage } from '@/types';\n\nconst app = new Hono();\n\n// AI Code Completion\napp.post('/completion', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { code, language, position, context } = body;\n\n    if (!code || !language) {\n      return c.json({ error: 'Code and language are required' }, 400);\n    }\n\n    const prompt = `You are an expert ${language} developer. Complete the following code at the specified position. Only return the completion text, no explanations.\n\nCode:\n${code}\n\nPosition: ${position}\nContext: ${context || 'No additional context'}\n\nComplete the code:`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: `You are an expert ${language} developer. Provide only code completions, no explanations.`,\n          },\n          {\n            role: 'user',\n            content: prompt,\n          },\n        ],\n        max_tokens: 200,\n        temperature: 0.3,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const completion = data.choices[0]?.message?.content?.trim();\n\n    if (!completion) {\n      return c.json({ error: 'No completion generated' }, 400);\n    }\n\n    return c.json({\n      success: true,\n      data: {\n        text: completion,\n        range: {\n          startLineNumber: position.lineNumber,\n          startColumn: position.column,\n          endLineNumber: position.lineNumber,\n          endColumn: position.column,\n        },\n        confidence: 0.8,\n      } as AICompletion,\n    });\n  } catch (error) {\n    console.error('Error generating completion:', error);\n    return c.json({ error: 'Failed to generate completion' }, 500);\n  }\n});\n\n// AI Error Detection\napp.post('/errors', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { code, language } = body;\n\n    if (!code || !language) {\n      return c.json({ error: 'Code and language are required' }, 400);\n    }\n\n    const prompt = `Analyze the following ${language} code for errors, bugs, and potential improvements. Return a JSON array of errors with the following structure:\n{\n  \"message\": \"Error description\",\n  \"line\": line_number,\n  \"column\": column_number,\n  \"severity\": \"error|warning|info\",\n  \"suggestion\": \"How to fix it\"\n}\n\nCode:\n${code}\n\nAnalysis:`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: `You are an expert ${language} developer and code reviewer. Analyze code for errors and provide specific, actionable feedback.`,\n          },\n          {\n            role: 'user',\n            content: prompt,\n          },\n        ],\n        max_tokens: 500,\n        temperature: 0.1,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const analysis = data.choices[0]?.message?.content?.trim();\n\n    if (!analysis) {\n      return c.json({ error: 'No analysis generated' }, 400);\n    }\n\n    // Try to parse the JSON response\n    let errors: AIError[] = [];\n    try {\n      errors = JSON.parse(analysis);\n    } catch (parseError) {\n      // If JSON parsing fails, try to extract errors from text\n      const lines = analysis.split('\\n');\n      let currentLine = 1;\n      \n      for (const line of lines) {\n        if (line.includes('error') || line.includes('warning') || line.includes('bug')) {\n          errors.push({\n            message: line,\n            line: currentLine,\n            column: 1,\n            severity: 'warning',\n            suggestion: 'Review this line for potential issues',\n          });\n        }\n        currentLine++;\n      }\n    }\n\n    return c.json({\n      success: true,\n      data: errors,\n    });\n  } catch (error) {\n    console.error('Error analyzing code:', error);\n    return c.json({ error: 'Failed to analyze code' }, 500);\n  }\n});\n\n// AI Chat Assistant\napp.post('/chat', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { message, code, language, chatHistory } = body;\n\n    if (!message) {\n      return c.json({ error: 'Message is required' }, 400);\n    }\n\n    const systemPrompt = `You are an expert programming assistant. You help developers with code questions, debugging, and best practices. Be concise, helpful, and provide practical solutions.`;\n\n    const userPrompt = `Language: ${language || 'Not specified'}\nCode Context: ${code || 'No code provided'}\n\nUser Question: ${message}\n\nPrevious Chat:\n${chatHistory?.map((msg: AIChatMessage) => `${msg.role}: ${msg.content}`).join('\\n') || 'No previous messages'}\n\nPlease provide a helpful response:`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: systemPrompt,\n          },\n          {\n            role: 'user',\n            content: userPrompt,\n          },\n        ],\n        max_tokens: 1000,\n        temperature: 0.7,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const assistantMessage = data.choices[0]?.message?.content?.trim();\n\n    if (!assistantMessage) {\n      return c.json({ error: 'No response generated' }, 400);\n    }\n\n    const chatMessage: AIChatMessage = {\n      id: crypto.randomUUID(),\n      role: 'assistant',\n      content: assistantMessage,\n      timestamp: new Date(),\n    };\n\n    return c.json({\n      success: true,\n      data: chatMessage,\n    });\n  } catch (error) {\n    console.error('Error in AI chat:', error);\n    return c.json({ error: 'Failed to process chat message' }, 500);\n  }\n});\n\n// AI Code Explanation\napp.post('/explain', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { code, language } = body;\n\n    if (!code || !language) {\n      return c.json({ error: 'Code and language are required' }, 400);\n    }\n\n    const prompt = `Explain the following ${language} code in simple terms. Focus on what the code does, how it works, and any important concepts. Keep it concise but comprehensive.\n\nCode:\n${code}\n\nExplanation:`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: `You are an expert programming educator. Explain code in clear, simple terms that both beginners and experienced developers can understand.`,\n          },\n          {\n            role: 'user',\n            content: prompt,\n          },\n        ],\n        max_tokens: 800,\n        temperature: 0.5,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const explanation = data.choices[0]?.message?.content?.trim();\n\n    if (!explanation) {\n      return c.json({ error: 'No explanation generated' }, 400);\n    }\n\n    return c.json({\n      success: true,\n      data: {\n        explanation,\n        code,\n        language,\n      },\n    });\n  } catch (error) {\n    console.error('Error explaining code:', error);\n    return c.json({ error: 'Failed to explain code' }, 500);\n  }\n});\n\n// AI Performance Optimization\napp.post('/optimize', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { code, language, performanceMetrics } = body;\n\n    if (!code || !language) {\n      return c.json({ error: 'Code and language are required' }, 400);\n    }\n\n    const prompt = `Analyze the following ${language} code for performance optimization opportunities. Consider:\n1. Time complexity\n2. Space complexity\n3. Memory usage\n4. Algorithm efficiency\n5. Best practices\n\nCurrent Performance Metrics: ${performanceMetrics || 'Not provided'}\n\nCode:\n${code}\n\nProvide specific optimization suggestions with code examples:`;\n\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.OPENAI_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: `You are an expert in performance optimization and software engineering. Provide specific, actionable optimization suggestions with code examples.`,\n          },\n          {\n            role: 'user',\n            content: prompt,\n          },\n        ],\n        max_tokens: 1000,\n        temperature: 0.3,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`OpenAI API error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    const optimization = data.choices[0]?.message?.content?.trim();\n\n    if (!optimization) {\n      return c.json({ error: 'No optimization suggestions generated' }, 400);\n    }\n\n    return c.json({\n      success: true,\n      data: {\n        suggestions: optimization,\n        originalCode: code,\n        language,\n      },\n    });\n  } catch (error) {\n    console.error('Error optimizing code:', error);\n    return c.json({ error: 'Failed to optimize code' }, 500);\n  }\n});\n\nexport const aiRoutes = app;\nexport default app; ", "import { Hono } from 'hono';\nimport { Deployment } from '@/types';\n\nconst app = new Hono();\n\n// Create deployment\napp.post('/', async (c) => {\n  try {\n    const userId = c.req.header('X-User-ID');\n    const body = await c.req.json();\n    const { projectId, customDomain } = body;\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    // Get project files\n    const { results: files } = await c.env.DB.prepare(`\n      SELECT * FROM project_files WHERE project_id = ? ORDER BY path\n    `).bind(projectId).all();\n\n    const deploymentId = crypto.randomUUID();\n    const now = new Date().toISOString();\n\n    // Create deployment record\n    await c.env.DB.prepare(`\n      INSERT INTO deployments (id, project_id, status, custom_domain, created_at)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(deploymentId, projectId, 'pending', customDomain, now).run();\n\n    // Simulate build process\n    setTimeout(async () => {\n      try {\n        // Update status to building\n        await c.env.DB.prepare(`\n          UPDATE deployments SET status = ? WHERE id = ?\n        `).bind('building', deploymentId).run();\n\n        // Build the project (simplified)\n        const buildResult = await buildProject(files, c.env.ASSETS);\n        \n        if (buildResult.success) {\n          // Update status to deployed\n          await c.env.DB.prepare(`\n            UPDATE deployments \n            SET status = ?, url = ?, build_logs = ?\n            WHERE id = ?\n          `).bind('deployed', buildResult.url, buildResult.logs, deploymentId).run();\n        } else {\n          // Update status to failed\n          await c.env.DB.prepare(`\n            UPDATE deployments \n            SET status = ?, build_logs = ?\n            WHERE id = ?\n          `).bind('failed', buildResult.logs, deploymentId).run();\n        }\n      } catch (error) {\n        console.error('Build error:', error);\n        await c.env.DB.prepare(`\n          UPDATE deployments \n          SET status = ?, build_logs = ?\n          WHERE id = ?\n        `).bind('failed', 'Build failed', deploymentId).run();\n      }\n    }, 1000);\n\n    return c.json({\n      success: true,\n      data: {\n        id: deploymentId,\n        projectId,\n        status: 'pending',\n        customDomain,\n        createdAt: now,\n      } as Deployment,\n    }, 201);\n  } catch (error) {\n    console.error('Error creating deployment:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get project deployments\napp.get('/project/:projectId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    // Check project access\n    const project = await c.env.DB.prepare(`\n      SELECT * FROM projects WHERE id = ?\n    `).bind(projectId).first();\n\n    if (!project) {\n      return c.json({ error: 'Project not found' }, 404);\n    }\n\n    if (project.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(projectId, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    // Get deployments\n    const { results: deployments } = await c.env.DB.prepare(`\n      SELECT * FROM deployments \n      WHERE project_id = ? \n      ORDER BY created_at DESC\n    `).bind(projectId).all();\n\n    return c.json({\n      success: true,\n      data: deployments,\n    });\n  } catch (error) {\n    console.error('Error getting deployments:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Get deployment details\napp.get('/:id', async (c) => {\n  try {\n    const deploymentId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const deployment = await c.env.DB.prepare(`\n      SELECT d.*, p.name as project_name, p.owner_id\n      FROM deployments d\n      JOIN projects p ON d.project_id = p.id\n      WHERE d.id = ?\n    `).bind(deploymentId).first();\n\n    if (!deployment) {\n      return c.json({ error: 'Deployment not found' }, 404);\n    }\n\n    if (deployment.owner_id !== userId) {\n      const collaborator = await c.env.DB.prepare(`\n        SELECT * FROM project_collaborators \n        WHERE project_id = ? AND user_id = ?\n      `).bind(deployment.project_id, userId).first();\n\n      if (!collaborator) {\n        return c.json({ error: 'Access denied' }, 403);\n      }\n    }\n\n    return c.json({\n      success: true,\n      data: deployment,\n    });\n  } catch (error) {\n    console.error('Error getting deployment:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Cancel deployment\napp.delete('/:id', async (c) => {\n  try {\n    const deploymentId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const deployment = await c.env.DB.prepare(`\n      SELECT d.*, p.owner_id\n      FROM deployments d\n      JOIN projects p ON d.project_id = p.id\n      WHERE d.id = ?\n    `).bind(deploymentId).first();\n\n    if (!deployment) {\n      return c.json({ error: 'Deployment not found' }, 404);\n    }\n\n    if (deployment.owner_id !== userId) {\n      return c.json({ error: 'Access denied' }, 403);\n    }\n\n    // Only allow cancellation of pending or building deployments\n    if (!['pending', 'building'].includes(deployment.status)) {\n      return c.json({ error: 'Cannot cancel completed deployment' }, 400);\n    }\n\n    await c.env.DB.prepare(`\n      UPDATE deployments \n      SET status = ?, build_logs = ?\n      WHERE id = ?\n    `).bind('cancelled', 'Deployment cancelled by user', deploymentId).run();\n\n    return c.json({\n      success: true,\n      message: 'Deployment cancelled successfully',\n    });\n  } catch (error) {\n    console.error('Error cancelling deployment:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Redeploy\napp.post('/:id/redeploy', async (c) => {\n  try {\n    const deploymentId = c.req.param('id');\n    const userId = c.req.header('X-User-ID');\n\n    if (!userId) {\n      return c.json({ error: 'Unauthorized' }, 401);\n    }\n\n    const deployment = await c.env.DB.prepare(`\n      SELECT d.*, p.owner_id\n      FROM deployments d\n      JOIN projects p ON d.project_id = p.id\n      WHERE d.id = ?\n    `).bind(deploymentId).first();\n\n    if (!deployment) {\n      return c.json({ error: 'Deployment not found' }, 404);\n    }\n\n    if (deployment.owner_id !== userId) {\n      return c.json({ error: 'Access denied' }, 403);\n    }\n\n    // Create new deployment\n    const newDeploymentId = crypto.randomUUID();\n    const now = new Date().toISOString();\n\n    await c.env.DB.prepare(`\n      INSERT INTO deployments (id, project_id, status, custom_domain, created_at)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(newDeploymentId, deployment.project_id, 'pending', deployment.custom_domain, now).run();\n\n    return c.json({\n      success: true,\n      data: {\n        id: newDeploymentId,\n        projectId: deployment.project_id,\n        status: 'pending',\n        customDomain: deployment.custom_domain,\n        createdAt: now,\n      } as Deployment,\n    }, 201);\n  } catch (error) {\n    console.error('Error redeploying:', error);\n    return c.json({ error: 'Internal server error' }, 500);\n  }\n});\n\n// Helper function to build project\nasync function buildProject(files: any[], assets: any) {\n  try {\n    // Simulate build process\n    const buildLogs: string[] = [];\n    \n    buildLogs.push('Starting build...');\n    buildLogs.push('Processing files...');\n\n    // Upload files to R2\n    for (const file of files) {\n      await assets.put(`builds/${file.id}/${file.name}`, file.content, {\n        httpMetadata: {\n          contentType: getContentType(file.name),\n        },\n      });\n      buildLogs.push(`Uploaded ${file.name}`);\n    }\n\n    buildLogs.push('Build completed successfully');\n\n    const url = `https://demo-${crypto.randomUUID()}.pages.dev`;\n\n    return {\n      success: true,\n      url,\n      logs: buildLogs.join('\\n'),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      logs: `Build failed: ${error.message}`,\n    };\n  }\n}\n\n// Helper function to get content type\nfunction getContentType(filename: string): string {\n  const ext = filename.split('.').pop()?.toLowerCase();\n  \n  switch (ext) {\n    case 'html':\n      return 'text/html';\n    case 'css':\n      return 'text/css';\n    case 'js':\n      return 'application/javascript';\n    case 'json':\n      return 'application/json';\n    case 'png':\n      return 'image/png';\n    case 'jpg':\n    case 'jpeg':\n      return 'image/jpeg';\n    case 'gif':\n      return 'image/gif';\n    case 'svg':\n      return 'image/svg+xml';\n    default:\n      return 'text/plain';\n  }\n}\n\nexport const deploymentRoutes = app;\nexport default app; ", "import { Hono } from 'hono';\nimport { AnalyticsEvent, PerformanceMetrics } from '@/types';\n\nconst app = new Hono();\n\n// Track analytics event\napp.post('/track', async (c) => {\n  try {\n    const body = await c.req.json();\n    const { type, userId, projectId, data } = body;\n\n    if (!type || !userId) {\n      return c.json({ error: 'Type and userId are required' }, 400);\n    }\n\n    const event: AnalyticsEvent = {\n      type,\n      userId,\n      projectId,\n      data: data || {},\n      timestamp: new Date(),\n    };\n\n    // Store in Analytics Engine\n    await c.env.ANALYTICS.writeDataPoint({\n      blobs: [event.type, event.userId, event.projectId || ''],\n      doubles: [event.timestamp.getTime()],\n      indexes: ['event_type', 'user_id', 'project_id'],\n    });\n\n    // Also store in KV for quick access\n    const key = `analytics:${event.timestamp.getTime()}:${event.type}`;\n    await c.env.CACHE.put(key, JSON.stringify(event), {\n      expirationTtl: 86400 * 7, // 7 days\n    });\n\n    return c.json({\n      success: true,\n      message: 'Event tracked successfully',\n    });\n  } catch (error) {\n    console.error('Error tracking analytics:', error);\n    return c.json({ error: 'Failed to track event' }, 500);\n  }\n});\n\n// Get user analytics\napp.get('/user/:userId', async (c) => {\n  try {\n    const userId = c.req.param('userId');\n    const days = parseInt(c.req.query('days') || '7');\n\n    if (!userId) {\n      return c.json({ error: 'User ID is required' }, 400);\n    }\n\n    // Get analytics from Analytics Engine\n    const query = `\n      SELECT \n        type,\n        COUNT(*) as count,\n        MIN(_time) as first_seen,\n        MAX(_time) as last_seen\n      FROM codecollab_analytics\n      WHERE user_id = ?\n        AND _time > datetime('now', '-${days} days')\n      GROUP BY type\n      ORDER BY count DESC\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query, [userId]);\n\n    // Calculate user metrics\n    const totalEvents = results.reduce((sum: number, row: any) => sum + row.count, 0);\n    const eventTypes = results.map((row: any) => row.type);\n    const mostActiveDay = results.length > 0 ? results[0].last_seen : null;\n\n    return c.json({\n      success: true,\n      data: {\n        userId,\n        period: `${days} days`,\n        totalEvents,\n        eventTypes,\n        mostActiveDay,\n        events: results,\n      },\n    });\n  } catch (error) {\n    console.error('Error getting user analytics:', error);\n    return c.json({ error: 'Failed to get analytics' }, 500);\n  }\n});\n\n// Get project analytics\napp.get('/project/:projectId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const days = parseInt(c.req.query('days') || '7');\n\n    if (!projectId) {\n      return c.json({ error: 'Project ID is required' }, 400);\n    }\n\n    // Get project analytics\n    const query = `\n      SELECT \n        type,\n        user_id,\n        COUNT(*) as count,\n        MIN(_time) as first_seen,\n        MAX(_time) as last_seen\n      FROM codecollab_analytics\n      WHERE project_id = ?\n        AND _time > datetime('now', '-${days} days')\n      GROUP BY type, user_id\n      ORDER BY count DESC\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query, [projectId]);\n\n    // Calculate project metrics\n    const totalEvents = results.reduce((sum: number, row: any) => sum + row.count, 0);\n    const uniqueUsers = [...new Set(results.map((row: any) => row.user_id))].length;\n    const eventTypes = [...new Set(results.map((row: any) => row.type))];\n\n    return c.json({\n      success: true,\n      data: {\n        projectId,\n        period: `${days} days`,\n        totalEvents,\n        uniqueUsers,\n        eventTypes,\n        events: results,\n      },\n    });\n  } catch (error) {\n    console.error('Error getting project analytics:', error);\n    return c.json({ error: 'Failed to get analytics' }, 500);\n  }\n});\n\n// Get performance metrics\napp.get('/performance', async (c) => {\n  try {\n    // Get global performance metrics\n    const query = `\n      SELECT \n        COUNT(*) as total_events,\n        COUNT(DISTINCT user_id) as unique_users,\n        COUNT(DISTINCT project_id) as active_projects,\n        AVG(CAST(data->>'latency' AS FLOAT)) as avg_latency\n      FROM codecollab_analytics\n      WHERE _time > datetime('now', '-1 hour')\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query);\n\n    const metrics: PerformanceMetrics = {\n      latency: results[0]?.avg_latency || 0,\n      throughput: results[0]?.total_events || 0,\n      errorRate: 0, // Calculate from error events\n      activeUsers: results[0]?.unique_users || 0,\n      globalRegions: ['us-east-1', 'eu-west-1', 'ap-southeast-1'], // Mock regions\n    };\n\n    return c.json({\n      success: true,\n      data: metrics,\n    });\n  } catch (error) {\n    console.error('Error getting performance metrics:', error);\n    return c.json({ error: 'Failed to get performance metrics' }, 500);\n  }\n});\n\n// Get real-time activity\napp.get('/realtime', async (c) => {\n  try {\n    // Get recent activity (last 5 minutes)\n    const query = `\n      SELECT \n        type,\n        user_id,\n        project_id,\n        _time\n      FROM codecollab_analytics\n      WHERE _time > datetime('now', '-5 minutes')\n      ORDER BY _time DESC\n      LIMIT 50\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query);\n\n    // Group by time intervals\n    const activityByMinute: Record<string, number> = {};\n    results.forEach((event: any) => {\n      const minute = new Date(event._time).toISOString().slice(0, 16);\n      activityByMinute[minute] = (activityByMinute[minute] || 0) + 1;\n    });\n\n    return c.json({\n      success: true,\n      data: {\n        recentEvents: results,\n        activityByMinute,\n        totalRecentEvents: results.length,\n      },\n    });\n  } catch (error) {\n    console.error('Error getting real-time activity:', error);\n    return c.json({ error: 'Failed to get real-time activity' }, 500);\n  }\n});\n\n// Get collaboration metrics\napp.get('/collaboration/:projectId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const days = parseInt(c.req.query('days') || '7');\n\n    if (!projectId) {\n      return c.json({ error: 'Project ID is required' }, 400);\n    }\n\n    // Get collaboration-specific events\n    const query = `\n      SELECT \n        user_id,\n        COUNT(*) as events,\n        COUNT(CASE WHEN type = 'cursor_update' THEN 1 END) as cursor_updates,\n        COUNT(CASE WHEN type = 'code_change' THEN 1 END) as code_changes,\n        COUNT(CASE WHEN type = 'chat_message' THEN 1 END) as chat_messages,\n        MIN(_time) as first_activity,\n        MAX(_time) as last_activity\n      FROM codecollab_analytics\n      WHERE project_id = ?\n        AND type IN ('cursor_update', 'code_change', 'chat_message', 'participant_joined', 'participant_left')\n        AND _time > datetime('now', '-${days} days')\n      GROUP BY user_id\n      ORDER BY events DESC\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query, [projectId]);\n\n    // Calculate collaboration metrics\n    const totalParticipants = results.length;\n    const totalEvents = results.reduce((sum: number, row: any) => sum + row.events, 0);\n    const totalCursorUpdates = results.reduce((sum: number, row: any) => sum + row.cursor_updates, 0);\n    const totalCodeChanges = results.reduce((sum: number, row: any) => sum + row.code_changes, 0);\n    const totalChatMessages = results.reduce((sum: number, row: any) => sum + row.chat_messages, 0);\n\n    return c.json({\n      success: true,\n      data: {\n        projectId,\n        period: `${days} days`,\n        totalParticipants,\n        totalEvents,\n        totalCursorUpdates,\n        totalCodeChanges,\n        totalChatMessages,\n        participants: results,\n      },\n    });\n  } catch (error) {\n    console.error('Error getting collaboration metrics:', error);\n    return c.json({ error: 'Failed to get collaboration metrics' }, 500);\n  }\n});\n\n// Export analytics data\napp.get('/export/:projectId', async (c) => {\n  try {\n    const projectId = c.req.param('projectId');\n    const format = c.req.query('format') || 'json';\n    const days = parseInt(c.req.query('days') || '30');\n\n    if (!projectId) {\n      return c.json({ error: 'Project ID is required' }, 400);\n    }\n\n    // Get all analytics data for the project\n    const query = `\n      SELECT *\n      FROM codecollab_analytics\n      WHERE project_id = ?\n        AND _time > datetime('now', '-${days} days')\n      ORDER BY _time DESC\n    `;\n\n    const { results } = await c.env.ANALYTICS.query(query, [projectId]);\n\n    if (format === 'csv') {\n      // Convert to CSV\n      const csvHeaders = ['timestamp', 'type', 'user_id', 'project_id', 'data'];\n      const csvRows = results.map((row: any) => [\n        row._time,\n        row.type,\n        row.user_id,\n        row.project_id,\n        JSON.stringify(row.data || {}),\n      ]);\n\n      const csvContent = [csvHeaders, ...csvRows]\n        .map(row => row.map(cell => `\"${cell}\"`).join(','))\n        .join('\\n');\n\n      return new Response(csvContent, {\n        headers: {\n          'Content-Type': 'text/csv',\n          'Content-Disposition': `attachment; filename=\"analytics-${projectId}-${days}days.csv\"`,\n        },\n      });\n    }\n\n    // Default JSON format\n    return c.json({\n      success: true,\n      data: {\n        projectId,\n        period: `${days} days`,\n        totalEvents: results.length,\n        events: results,\n      },\n    });\n  } catch (error) {\n    console.error('Error exporting analytics:', error);\n    return c.json({ error: 'Failed to export analytics' }, 500);\n  }\n});\n\nexport const analyticsRoutes = app;\nexport default app; ", "import { Cursor, CodeChange, WSMessage } from '@/types';\n\ninterface Participant {\n  id: string;\n  name: string;\n  color: string;\n  webSocket: WebSocket;\n  isConnected: boolean;\n  lastSeen: Date;\n}\n\ninterface DocumentState {\n  content: string;\n  version: number;\n  changes: CodeChange[];\n}\n\nexport class CollaborationRoom implements DurableObject {\n  private participants: Map<string, Participant> = new Map();\n  private document: DocumentState = {\n    content: '',\n    version: 0,\n    changes: [],\n  };\n  private cursors: Map<string, Cursor> = new Map();\n  private env: any;\n  private state: DurableObjectState;\n\n  constructor(state: DurableObjectState, env: any) {\n    this.state = state;\n    this.env = env;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    const path = url.pathname;\n\n    if (path === '/ws' && request.method === 'POST') {\n      return this.handleWebSocketConnection(request);\n    }\n\n    if (path === '/state') {\n      return this.getState();\n    }\n\n    if (path === '/participants') {\n      return this.getParticipants();\n    }\n\n    return new Response('Not found', { status: 404 });\n  }\n\n  private async handleWebSocketConnection(request: Request): Promise<Response> {\n    const data = await request.json();\n    const { userId, userName, userColor, webSocket } = data;\n\n    // Add participant\n    const participant: Participant = {\n      id: userId,\n      name: userName,\n      color: userColor,\n      webSocket,\n      isConnected: true,\n      lastSeen: new Date(),\n    };\n\n    this.participants.set(userId, participant);\n\n    // Set up WebSocket event handlers\n    webSocket.addEventListener('message', (event) => {\n      this.handleWebSocketMessage(userId, event);\n    });\n\n    webSocket.addEventListener('close', () => {\n      this.handleParticipantDisconnect(userId);\n    });\n\n    webSocket.addEventListener('error', () => {\n      this.handleParticipantDisconnect(userId);\n    });\n\n    // Send initial state\n    this.sendToParticipant(userId, {\n      type: 'init',\n      payload: {\n        content: this.document.content,\n        version: this.document.version,\n        participants: Array.from(this.participants.values()).map(p => ({\n          id: p.id,\n          name: p.name,\n          color: p.color,\n        })),\n        cursors: Array.from(this.cursors.values()),\n      },\n    });\n\n    // Notify other participants\n    this.broadcastToOthers(userId, {\n      type: 'participant_joined',\n      payload: {\n        id: userId,\n        name: userName,\n        color: userColor,\n      },\n    });\n\n    return new Response('OK');\n  }\n\n  private handleWebSocketMessage(userId: string, event: MessageEvent): void {\n    try {\n      const message: WSMessage = JSON.parse(event.data);\n      \n      switch (message.type) {\n        case 'cursor_update':\n          this.handleCursorUpdate(userId, message.payload);\n          break;\n        case 'code_change':\n          this.handleCodeChange(userId, message.payload);\n          break;\n        case 'chat_message':\n          this.handleChatMessage(userId, message.payload);\n          break;\n        case 'ping':\n          this.handlePing(userId);\n          break;\n        default:\n          console.warn('Unknown message type:', message.type);\n      }\n    } catch (error) {\n      console.error('Error handling WebSocket message:', error);\n    }\n  }\n\n  private handleCursorUpdate(userId: string, cursorData: Partial<Cursor>): void {\n    const participant = this.participants.get(userId);\n    if (!participant) return;\n\n    const cursor: Cursor = {\n      id: userId,\n      userId,\n      userName: participant.name,\n      userColor: participant.color,\n      position: cursorData.position!,\n      selection: cursorData.selection,\n    };\n\n    this.cursors.set(userId, cursor);\n\n    // Broadcast to other participants\n    this.broadcastToOthers(userId, {\n      type: 'cursor_update',\n      payload: cursor,\n    });\n  }\n\n  private handleCodeChange(userId: string, change: CodeChange): void {\n    // Apply Operational Transform\n    const transformedChange = this.applyOperationalTransform(change);\n    \n    // Update document\n    this.document.content = this.applyChange(this.document.content, transformedChange);\n    this.document.version++;\n    this.document.changes.push(transformedChange);\n\n    // Broadcast to other participants\n    this.broadcastToOthers(userId, {\n      type: 'code_change',\n      payload: transformedChange,\n    });\n\n    // Store in D1 for persistence\n    this.persistDocument();\n  }\n\n  private applyOperationalTransform(change: CodeChange): CodeChange {\n    // Simple OT implementation - in production, use a proper OT library\n    const concurrentChanges = this.document.changes.filter(\n      c => c.timestamp > Date.now() - 5000 // Last 5 seconds\n    );\n\n    let transformedChange = { ...change };\n\n    for (const concurrentChange of concurrentChanges) {\n      if (concurrentChange.userId === change.userId) continue;\n\n      // Transform based on position\n      if (concurrentChange.position < change.position) {\n        if (concurrentChange.type === 'insert') {\n          transformedChange.position += concurrentChange.text?.length || 0;\n        } else if (concurrentChange.type === 'delete') {\n          transformedChange.position -= concurrentChange.length || 0;\n        }\n      }\n    }\n\n    return transformedChange;\n  }\n\n  private applyChange(content: string, change: CodeChange): string {\n    switch (change.type) {\n      case 'insert':\n        return content.slice(0, change.position) + (change.text || '') + content.slice(change.position);\n      case 'delete':\n        return content.slice(0, change.position) + content.slice(change.position + (change.length || 0));\n      case 'replace':\n        return content.slice(0, change.position) + (change.text || '') + content.slice(change.position + (change.length || 0));\n      default:\n        return content;\n    }\n  }\n\n  private handleChatMessage(userId: string, message: any): void {\n    const participant = this.participants.get(userId);\n    if (!participant) return;\n\n    const chatMessage = {\n      id: crypto.randomUUID(),\n      userId,\n      userName: participant.name,\n      userColor: participant.color,\n      content: message.content,\n      timestamp: new Date(),\n    };\n\n    // Broadcast to all participants\n    this.broadcastToAll({\n      type: 'chat_message',\n      payload: chatMessage,\n    });\n  }\n\n  private handlePing(userId: string): void {\n    const participant = this.participants.get(userId);\n    if (participant) {\n      participant.lastSeen = new Date();\n      this.sendToParticipant(userId, { type: 'pong' });\n    }\n  }\n\n  private handleParticipantDisconnect(userId: string): void {\n    this.participants.delete(userId);\n    this.cursors.delete(userId);\n\n    // Notify other participants\n    this.broadcastToAll({\n      type: 'participant_left',\n      payload: { userId },\n    });\n  }\n\n  private sendToParticipant(userId: string, message: any): void {\n    const participant = this.participants.get(userId);\n    if (participant?.isConnected) {\n      try {\n        participant.webSocket.send(JSON.stringify(message));\n      } catch (error) {\n        console.error('Error sending message to participant:', error);\n        this.handleParticipantDisconnect(userId);\n      }\n    }\n  }\n\n  private broadcastToAll(message: any): void {\n    for (const [userId] of this.participants) {\n      this.sendToParticipant(userId, message);\n    }\n  }\n\n  private broadcastToOthers(excludeUserId: string, message: any): void {\n    for (const [userId] of this.participants) {\n      if (userId !== excludeUserId) {\n        this.sendToParticipant(userId, message);\n      }\n    }\n  }\n\n  private async persistDocument(): Promise<void> {\n    try {\n      await this.state.storage.put('document', this.document);\n    } catch (error) {\n      console.error('Error persisting document:', error);\n    }\n  }\n\n  private async getState(): Promise<Response> {\n    return new Response(JSON.stringify({\n      participants: Array.from(this.participants.values()).map(p => ({\n        id: p.id,\n        name: p.name,\n        color: p.color,\n        isConnected: p.isConnected,\n        lastSeen: p.lastSeen,\n      })),\n      document: this.document,\n      cursors: Array.from(this.cursors.values()),\n    }), {\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n\n  private async getParticipants(): Promise<Response> {\n    return new Response(JSON.stringify(\n      Array.from(this.participants.values()).map(p => ({\n        id: p.id,\n        name: p.name,\n        color: p.color,\n        isConnected: p.isConnected,\n        lastSeen: p.lastSeen,\n      }))\n    ), {\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n} ", "import { Hono } from 'hono';\nimport { cors } from 'hono/cors';\nimport { logger } from 'hono/logger';\nimport { prettyJSON } from 'hono/pretty-json';\nimport { authRoutes } from './routes/auth';\nimport { projectRoutes } from './routes/projects';\nimport { collaborationRoutes } from './routes/collaboration';\nimport { aiRoutes } from './routes/ai';\nimport { deploymentRoutes } from './routes/deployments';\nimport { analyticsRoutes } from './routes/analytics';\nimport { CollaborationRoom } from './durable-objects/collaboration-room';\n\nconst app = new Hono();\n\n// Middleware\napp.use('*', logger());\napp.use('*', prettyJSON());\napp.use('*', cors({\n  origin: ['http://localhost:3000', 'https://codecollab-live.pages.dev'],\n  credentials: true,\n}));\n\n// Health check\napp.get('/', (c) => {\n  return c.json({\n    message: 'CodeCollab Live API',\n    version: '1.0.0',\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n  });\n});\n\n// Routes\napp.route('/api/auth', authRoutes);\napp.route('/api/projects', projectRoutes);\napp.route('/api/collaboration', collaborationRoutes);\napp.route('/api/ai', aiRoutes);\napp.route('/api/deployments', deploymentRoutes);\napp.route('/api/analytics', analyticsRoutes);\n\n// WebSocket upgrade handler\napp.get('/ws/:roomId', async (c) => {\n  const roomId = c.req.param('roomId');\n  const upgradeHeader = c.req.header('Upgrade');\n  \n  if (upgradeHeader !== 'websocket') {\n    return c.text('Expected websocket', 426);\n  }\n\n  const url = new URL(c.req.url);\n  const userId = url.searchParams.get('userId');\n  const userName = url.searchParams.get('userName');\n  const userColor = url.searchParams.get('userColor') || '#3b82f6';\n\n  if (!userId || !userName) {\n    return c.text('Missing userId or userName', 400);\n  }\n\n  // Get Durable Object\n  const id = c.env.COLLABORATION.idFromName(roomId);\n  const obj = c.env.COLLABORATION.get(id);\n\n  // Upgrade to WebSocket\n  const webSocketPair = new WebSocketPair();\n  const [client, server] = Object.values(webSocketPair);\n\n  server.accept();\n\n  // Send to Durable Object\n  obj.fetch('http://localhost/ws', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      userId,\n      userName,\n      userColor,\n      webSocket: server,\n    }),\n  });\n\n  return new Response(null, {\n    status: 101,\n    webSocket: client,\n  });\n});\n\n// Error handling\napp.onError((err, c) => {\n  console.error('Error:', err);\n  return c.json({\n    error: 'Internal Server Error',\n    message: err.message,\n  }, 500);\n});\n\n// 404 handler\napp.notFound((c) => {\n  return c.json({\n    error: 'Not Found',\n    message: 'The requested resource was not found',\n  }, 404);\n});\n\nexport default app;\n\n// Durable Objects\nexport { CollaborationRoom }; ", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/src/worker/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/yentrinh/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/yentrinh/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/src/worker/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/.wrangler/tmp/bundle-NAJ01U/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/yentrinh/.nvm/versions/node/v22.17.1/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/.wrangler/tmp/bundle-NAJ01U/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/yentrinh/Downloads/Yen-learning/Cloudflare-demo/Cloudflare-peerpoint/cloudflare-peerpoint-2025-08-09-demo/applications-demo/.wrangler/tmp/bundle-NAJ01U/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["raw", "app", "Node", "Node", "Hono", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono", "app", "Hono"]
}
